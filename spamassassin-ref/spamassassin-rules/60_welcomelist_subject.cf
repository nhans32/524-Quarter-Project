# SpamAssassin rules file: default welcomelist/blocklist subject
#
# Please don't modify this file as your changes will be overwritten with
# the next update. Use @@LOCAL_RULES_DIR@@/local.cf instead.
# See 'perldoc Mail::SpamAssassin::Conf' for details.
#
# <@LICENSE>
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to you under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at:
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# </@LICENSE>

###########################################################################
# Welcomelist/Blocklist rules
#
# Note that most of these get 'noautolearn'.  They should not be
# considered when deciding whether to auto-learn a message, as a
# user slip-up could result in scribbling side-effects in the bayes
# db as a result -- which is hard to remedy.

# 4.0 / Bug 7826 renames whitelist to welcomelist and blacklist to blocklist
# Module was renamed WhiteListSubject -> WelcomeListSubject
ifplugin Mail::SpamAssassin::Plugin::WelcomeListSubject
  header SUBJECT_IN_WELCOMELIST		eval:check_subject_in_welcomelist()
  describe SUBJECT_IN_WELCOMELIST	Subject: contains string in the user's welcome-list
  tflags SUBJECT_IN_WELCOMELIST		userconf nice noautolearn
  score SUBJECT_IN_WELCOMELIST		-100

  # Backwards compatibility
  # To disable set "enable_compat welcomelist_blocklist" in init.pre
  if !can(Mail::SpamAssassin::Conf::compat_welcomelist_blocklist)
    meta SUBJECT_IN_WHITELIST		(SUBJECT_IN_WELCOMELIST)
    describe SUBJECT_IN_WHITELIST	DEPRECATED: See SUBJECT_IN_WELCOMELIST
    tflags SUBJECT_IN_WHITELIST		userconf nice noautolearn
    score SUBJECT_IN_WHITELIST		-100
    score SUBJECT_IN_WELCOMELIST	-0.01
  endif

  header SUBJECT_IN_BLOCKLIST		eval:check_subject_in_blocklist()
  describe SUBJECT_IN_BLOCKLIST		Subject: contains string in the user's block-list
  tflags SUBJECT_IN_BLOCKLIST		userconf noautolearn
  score SUBJECT_IN_BLOCKLIST		100

  if !can(Mail::SpamAssassin::Conf::compat_welcomelist_blocklist)
    meta SUBJECT_IN_BLACKLIST		(SUBJECT_IN_BLOCKLIST)
    describe SUBJECT_IN_BLACKLIST	DEPRECATED: See SUBJECT_IN_BLOCKLIST
    tflags SUBJECT_IN_BLACKLIST		userconf noautolearn
    score SUBJECT_IN_BLACKLIST		100
    score SUBJECT_IN_BLOCKLIST		0.01
  endif
endif

if !plugin(Mail::SpamAssassin::Plugin::WelcomeListSubject)
ifplugin Mail::SpamAssassin::Plugin::WhiteListSubject
  header SUBJECT_IN_WELCOMELIST		eval:check_subject_in_whitelist()
  describe SUBJECT_IN_WELCOMELIST	Subject: contains string in the user's welcome-list
  tflags SUBJECT_IN_WELCOMELIST		userconf nice noautolearn
  score SUBJECT_IN_WELCOMELIST		-0.01

  meta SUBJECT_IN_WHITELIST		(SUBJECT_IN_WELCOMELIST)
  describe SUBJECT_IN_WHITELIST		DEPRECATED: See SUBJECT_IN_WELCOMELIST
  tflags SUBJECT_IN_WHITELIST		userconf nice noautolearn
  score SUBJECT_IN_WHITELIST		-100

  header SUBJECT_IN_BLOCKLIST		eval:check_subject_in_blacklist()
  describe SUBJECT_IN_BLOCKLIST		Subject: contains string in the user's block-list
  tflags SUBJECT_IN_BLOCKLIST		userconf noautolearn
  score SUBJECT_IN_BLOCKLIST		0.01

  meta SUBJECT_IN_BLACKLIST		(SUBJECT_IN_BLOCKLIST)
  describe SUBJECT_IN_BLACKLIST		DEPRECATED: See SUBJECT_IN_BLOCKLIST
  tflags SUBJECT_IN_BLACKLIST		userconf noautolearn
  score SUBJECT_IN_BLACKLIST		100
endif
endif

